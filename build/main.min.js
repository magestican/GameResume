/*! slic 2014-11-21 */
!function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(){!function(){var App=window.App=angular.module("Slic",["SlicControllers","SlicDirectives","SlicFactories","SlicFilters","ngSanitize"]);App.config(["$routeProvider",function(){}])}()},{}],2:[function(require){require("./controllers.js"),require("./directives.js"),require("./factories.js"),require("./filters.js"),require("./app.js")},{"./app.js":1,"./controllers.js":3,"./directives.js":5,"./factories.js":6,"./filters.js":7}],3:[function(require){angular.module("SlicControllers",[]),require("./controllers/main.js")},{"./controllers/main.js":4}],4:[function(){angular.module("SlicControllers").controller("Main",["$scope","$filter",function(){function Emitter(point,velocity,spread){this.position=point,this.velocity=velocity,this.spread=spread||Math.PI/32,this.drawColor="#999"}function drawParticles(){ctx.fillStyle="rgb(0,0,255)";for(var i=0;i<particles.length;i++){var position=particles[i].position;ctx.fillRect(position.x,position.y,particleSize,particleSize)}}function Field(point,mass){this.position=point,this.setMass(mass)}function drawCircle(object){ctx.fillStyle=object.drawColor,ctx.beginPath(),ctx.arc(object.position.x,object.position.y,objectSize,0,2*Math.PI),ctx.closePath(),ctx.fill()}function update(){}function render(){drawParticles(),fields.forEach(drawCircle),emitters.forEach(drawCircle)}var c=document.getElementById("myCanvas"),ctx=c.getContext("2d"),particleSize=1;Vector.prototype.add=function(vector){this.x+=vector.x,this.y+=vector.y},Vector.prototype.getMagnitude=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},Vector.prototype.getAngle=function(){return Math.atan2(this.y,this.x)},Vector.fromAngle=function(angle,magnitude){return new Vector(magnitude*Math.cos(angle),magnitude*Math.sin(angle))},Particle.prototype.move=function(){this.velocity.add(this.acceleration),this.position.add(this.velocity)},Emitter.prototype.emitParticle=function(){var angle=this.velocity.getAngle()+this.spread-Math.random()*this.spread*2,magnitude=this.velocity.getMagnitude(),position=new Vector(this.position.x,this.position.y),velocity=Vector.fromAngle(angle,magnitude);return new Particle(position,velocity)},Field.prototype.setMass=function(mass){this.mass=mass||100,this.drawColor=0>mass?"#f00":"#0f0"},Particle.prototype.submitToFields=function(fields){for(var totalAccelerationX=0,totalAccelerationY=0,i=0;i<fields.length;i++){var field=fields[i],vectorX=field.position.x-this.position.x,vectorY=field.position.y-this.position.y,force=field.mass/Math.pow(vectorX*vectorX+vectorY*vectorY,1.5);totalAccelerationX+=vectorX*force,totalAccelerationY+=vectorY*force}this.acceleration=new Vector(totalAccelerationX,totalAccelerationY)},Particle.prototype.submitToFields=function(fields){for(var totalAccelerationX=0,totalAccelerationY=0,i=0;i<fields.length;i++){var field=fields[i],vectorX=field.position.x-this.position.x,vectorY=field.position.y-this.position.y,force=field.mass/Math.pow(vectorX*vectorX+vectorY*vectorY,1.5);totalAccelerationX+=vectorX*force,totalAccelerationY+=vectorY*force}this.acceleration=new Vector(totalAccelerationX,totalAccelerationY)};var particles=[],emitters=[new Emitter(new Vector(100,230),Vector.fromAngle(0,2))],fields=[new Field(new Vector(400,230),-140)];!function(){function main(tFrame){MyGame.stopMain=window.requestAnimationFrame(main);var nextTick=MyGame.lastTick+MyGame.tickLength,numTicks=0;if(tFrame>nextTick){var timeSinceTick=tFrame-MyGame.lastTick;numTicks=Math.floor(timeSinceTick/MyGame.tickLength)}queueUpdates(numTicks),render(tFrame),MyGame.lastRender=tFrame}function queueUpdates(numTicks){for(var i=0;numTicks>i;i++)MyGame.lastTick=MyGame.lastTick+MyGame.tickLength,update(MyGame.lastTick)}MyGame.lastTick=performance.now(),MyGame.lastRender=MyGame.lastTick,MyGame.tickLength=50,setInitialState(),main(performance.now())}()}])},{}],5:[function(){angular.module("SlicDirectives",[])},{}],6:[function(){angular.module("SlicFactories",[])},{}],7:[function(){angular.module("SlicFilters",[])},{}]},{},[2]);